#MICROSERVICE PROPERTIES
#1. provides application name to make not hard coded communication between services.
spring.application.name=api-gateway


#DISCOVERY CLIENT PROPERTIES
#1. provides address of eureka server and used before adding security to eureka.
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#2. provides address of eureka server and used after adding security to eureka.
eureka.client.serviceUrl.defaultZone=http://eureka:eureka@localhost:8761/eureka


#LOGGING(all application and gateway) PROPERTIES
#1. provides logging visible level.
logging.level.root=INFO
#2. defines class which is responsible for defining the routes of incoming requests, all logs of this class will be shown from level info.
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE


#GATEWAY PROPERTIES
#Product Service Route
spring.cloud.gateway.routes[0].id=product-service
#1. lb means that api gateway will work like a load balancer(make request to every available instance of microservice).
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

#Order Service Route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

#Discovery Server Route
spring.cloud.gateway.routes[2].id=discovery-server
#2. localhost because server can have only one instance.
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

#Discovery Server Static Resources Route
#3. this route is defined to load not only html, but css and js.
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

#predicates can be:
# 1.After=(after defined time requests will be available).
# 1.Before=(before defined time requests will be available).
# 1.Cookie=(checks if defined cookie was provided).
# 1.Method=(requests will be available for defined methods[GET, POST, ...]).
# 1.Header=(checks if defined header was provided and value matches the pattern[Header=X-Request-Id, \d+]).


#OAUTH2.0 PROPERTIES
#1. spring boot will go to this path after start and get all information it needs.
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm